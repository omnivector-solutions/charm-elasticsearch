version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.2.1
  slack: circleci/slack@3.4.2

workflows:
  test-build-deploy:
    jobs:
      - lint-charms:
          context: aws
      - build-and-deploy-charms-on-lxd:
          context: aws
          requires:
            - lint-charms
      - push-charms-to-s3:
          context: aws
          requires:
            - build-and-deploy-charms-on-lxd

jobs:
  lint-charms:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: Install tox
          command: |
            sudo apt-get update
            sudo apt-get install -y tox
      - run:
          command: |
            make lint


  build-and-deploy-charms-on-lxd:
    machine:
      image: ubuntu-1604:202004-01
    steps:
      - checkout

      - run:
          name: "Install snapd"
          command: |
            sudo apt-get update
            sudo apt-get install --only-upgrade -y snapd
      - run:
          name: "Install charmcraft"
          command: |
            sudo snap install charmcraft --beta
      - run:
          name: "Build charms"
          command: |
            /snap/bin/charmcraft build
      - run:
          name: "Install LXD"
          command: |
            sudo apt-get purge lxd lxd-client lxcfs
            sudo snap install lxd
            sudo lxd init --auto
            sleep 5
            sudo /snap/bin/lxd.lxc network set lxdbr0 ipv6.address none
      - run:
          name: "Install Juju"
          command: |
            sudo apt-get purge juju
            sudo snap install juju --classic
      - run:
          name: "Install juju-wait"
          command: |
            sudo snap install juju-wait --classic
      - run:
          name: "Install jq"
          command: |
            sudo snap install jq
      - run:
          name: "Bootstrap Juju"
          command: |
            /snap/bin/juju bootstrap localhost
            /snap/bin/juju model-config logging-config="<root>=DEBUG;<unit>=DEBUG"
      - run:
          name: "Get elasticsearch resource"
          command: |
            wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.8.1-amd64.deb
      - run:
          name: "Deploy Charm"
          command: |
            /snap/bin/juju deploy ./elasticsearch.charm --resource elasticsearch=./elasticsearch-7.8.1-amd64.deb
      - run:
          name: "Wait for deployment status"
          no_output_timeout: 20m
          command: |
            export PATH=$PATH:/snap/bin
            /snap/bin/juju-wait -w -t 1150
      - run:
          name: "Show juju status"
          command: |
            /snap/bin/juju status
          when: always
      - run:
          name: "grab logs"
          command: |
            make grab-logs
            mkdir -p /tmp/unit-logs
            mv *.log /tmp/unit-logs/
          when: always

      - store_artifacts:
          path: /tmp/unit-logs
          when: always
            - save_cache:
          name: Cache built charms once we validate they successfully deploy.
          key: built-charm-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - elasticsearch.charm
      - slack/status:
          fail_only: false

  push-charms-to-s3:
    executor: aws-cli/default
    steps:
      - checkout

      - aws-cli/setup:
          profile-name: default

      - restore_cache:
          name: Restore the charms from the cache to be pushed to s3
          key: built-charm-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name: "Push charms to s3"
          command: |
            make push-charms-to-edge
      - slack/status:
          fail_only: false
